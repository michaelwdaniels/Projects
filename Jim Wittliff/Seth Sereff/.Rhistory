low <- sample_size[j]+1
upp <- 2*sample_size[j]
pop2j[[j]] <- s[[1]][low:upp]
}
pop1[[i]] <- pop1j
pop2[[i]] <- pop2j
}
pop1
pop1[[1]]
pop1[[560]]
pop2[[560]]
pop2[[1000]]
bb_data <- read.csv("~/Desktop/bb_data.csv")
library(nlme)
head(bb_data)
bb.f <- subset(bb_data,gender=="F")
bb.m <- subset(bb_data,gender=="M")
str(bb_data)
plot(bb.f$age,bb.f$time,col="blue",ylim=c(25,65),pch=0)
points(bb.m$age,bb.m$time,col="red",pch=1)
legend("bottomright",c("F","M"),col=c("blue","red"),lty=1)
bb_data$age.sq <- bb_data$age^2
mod <- lm(time ~ gender + age + age.sq + age*gender + age.sq*gender, data=bb_data)
summary(mod)
beta <- mod$coefficients
beta
head(bb_data)
bb <- bb_data[,c(3,1,4)]
bb$gender <- ifelse(bb$gender=="F",0,1)
bb$age.gender <- bb$age*bb$gender
head(bb)
bb$age2.gender <- bb$age.sq*bb$gender
X <- as.matrix(bb)
as.table(head(X,10))
idx.f <- which(bb_data$gender=="F")
idx.m <- which(bb_data$gender=="M")
unique(bb_data[idx.f,age]
fitted.f <- apply(bb,1, function(x) 51.874-0.881*x[2]+0.016*x[3])
unique(fitted)
unique(bb_data$time)
plot(bb_data$age[idx.f],bb_data$time[idx.f],col="blue",ylim=c(25,65),pch=0)
points(bb_data$age[idx.m],bb_data$time[idx.m],col="red",pch=1)
lines(fitted[idx.f],bb_data$time[idx.f],col="blue")
lines(fitted[idx.m],bb_data$time[idx.m],col="red",pch=3)
legend("bottomright",c("F","M"),col=c("blue","red"),lty=1)
unique(bb_data[idx.f,age])
bb_data
unique(bb_data[idx.f,1])
age.f <- unique(bb_data[idx.f,1])
which(unique(bb_data[idx.f,1]))
0.4895*600
e^-1.3
exp(-1.3)
exp(-1.3053+0.4895)
exp(0.4895)
exp(-1.3053-0.4895)
log(0.5)
log(1.3)
log(1.5)
log(1.6)
log(1.7)
log(1.65)
300*log(0.5)
300*log(0.5)+300*log(0.5)
-2*(300*log(0.5)+300*log(0.5))
828.547/2
-(828.547/2)
-(828.547/2)/600
exp(-(828.547/2)/600)
install.packages('SKAT')
library(SKAT)
data("SKAT.example")
names(SKAT.example)
dim(SKAT.example$Z)
length(SKAT.example$y.c)
length(SKAT.example$y.b)
dim(SKAT.example$X)
attach(SKAT.example)
Z[1:5,1:5]
y.c[1:5]
y.b[1:5]
X[1:5,]
summary(y.c)
table(y.b)
summary(X[,2])
table(X[,1])
obj.c <- SKAT_Null_Model(y.c ~ X, out_type = "C")
SKAT(Z, obj.c, method = "optimal.adj")$p.value
SKAT(Z, obj.c, r.corr = 0)$p.value
SKAT(Z, obj.c, r.corr = 1)$p.value
SKAT(Z, obj.c, r.corr = 0.8)$p.value
pval.out <- c()
for(i in c(0:5)*10+1){
Z2 <- Z[,i:(i+15)]
temp <- SKAT(Z2, obj.c, r.corr = 0)$p.value
pval.out <- c(pval.out,temp)
}
pval.out
plot(c(0:5)*10+1, -log10(pval.out),ylab="-log10(pval)",xlab="window")
library(SKAT)
data("SKAT.example")
names(SKAT.example)
dim(SKAT.example$Z)
length(SKAT.example$y.c)
length(SKAT.example$y.b)
dim(SKAT.example$X)
attach(SKAT.example)
Z[1:5,1:5]
y.c[1:5]
y.b[1:5]
X[1:5,]
summary(y.c)
table(y.b)
summary(X[,2])
table(X[,1])
obj.c <- SKAT_Null_Model(y.c ~ X, out_type = "C")
SKAT(Z, obj.c, method = "optimal.adj")$p.value
SKAT(Z, obj.c, r.corr = 0)$p.value
SKAT(Z, obj.c, r.corr = 1)$p.value
attach(SKAT.example)
remove(X)
attach(SKAT.example)
Z[1:5,1:5]
y.c[1:5]
y.b[1:5]
X[1:5,]
summary(y.c)
table(y.b)
summary(X[,2])
table(X[,1])
obj.c <- SKAT_Null_Model(y.c ~ X, out_type = "C")
SKAT(Z, obj.c, method = "optimal.adj")$p.value
SKAT(Z, obj.c, r.corr = 0)$p.value
SKAT(Z, obj.c, r.corr = 1)$p.value
SKAT(Z, obj.c, r.corr = 0.8)$p.value
pval.out <- c()
for(i in c(0:5)*10+1){
Z2 <- Z[,i:(i+15)]
temp <- SKAT(Z2, obj.c, r.corr = 0)$p.value
pval.out <- c(pval.out,temp)
}
pval.out
plot(c(0:5)*10+1, -log10(pval.out),ylab="-log10(pval)",xlab="window")
SKAT(Z, obj.b, method = "optimal.adj")$p.value
obj.b <- SKAT_Null_Model(y.b ~ X, out_type = "C")
SKAT(Z, obj.b, method = "optimal.adj")$p.value
detach(SKAT.example)
library(SKAT)
data("SKAT.example")
names(SKAT.example)
dim(SKAT.example$Z)
length(SKAT.example$y.c)
length(SKAT.example$y.b)
dim(SKAT.example$X)
remove(X)
library(SKAT)
data("SKAT.example")
names(SKAT.example)
dim(SKAT.example$Z)
length(SKAT.example$y.c)
length(SKAT.example$y.b)
dim(SKAT.example$X)
attach(SKAT.example)
Z[1:5,1:5]
y.c[1:5]
y.b[1:5]
X[1:5,]
summary(y.c)
table(y.b)
summary(X[,2])
table(X[,1])
obj.c <- SKAT_Null_Model(y.c ~ X, out_type = "C")
SKAT(Z, obj.c, method = "optimal.adj")$p.value
obj.b <- SKAT_Null_Model(y.b ~ X, out_type = "C")
SKAT(Z, obj.b, method = "optimal.adj")$p.value
SKAT(Z, obj.c, r.corr = 0)$p.value
SKAT(Z, obj.c, r.corr = 1)$p.value
SKAT(Z, obj.c, r.corr = 0.8)$p.value
SKAT(Z, obj.c, method = "optimal.adj")$p.value
pval.out <- c()
for(i in c(0:5)*10+1){
Z2 <- Z[,i:(i+15)]
temp <- SKAT(Z2, obj.c, r.corr = 0)$p.value
pval.out <- c(pval.out,temp)
}
pval.out
Z2
dim(SKAT.example$Z)
c(0:5)*10+
1
install.packages("RSSL")
library(dplyr,warn.conflicts = FALSE)
library(ggplot2,warn.conflicts = FALSE)
set.seed(2)
df <- generate2ClassGaussian(200, d=2, var = 0.2, expected=TRUE)
df
library(RSSL)
set.seed(2)
df <- generate2ClassGaussian(200, d=2, var = 0.2, expected=TRUE)
df
generate2ClassGaussian
df <- df %>% add_missinglabels_mar(Class~.,prob=0.98)
df
df <- generate2ClassGaussian(200, d=2, var = 0.2, expected=TRUE)
df <- df %>% add_missinglabels_mar(Class~.,prob=0.98)
df
g_nm <- NearestMeanClassifier(Class~.,df,prior=matrix(0.5,2))
g_nm
g_self <- SelfLearning(Class~.,df,
method=NearestMeanClassifier,
prior=matrix(0.5,2))
g_self
SelfLearning
library(readr)
uPA <- read_csv("~/Downloads/uPA.csv")
View(uPA)
grep('neg',uPA$Nodes)
uPA$Nodes[grep('neg',uPA$Nodes)]
uPA$Nodal_Status[grep('neg',uPA$Nodes)]
uPA$Nodes[grep('pos,',uPA$Nodes)]
grep('pos,1+',uPA$Nodes)
c(grep('pos,1+',uPA$Nodes),grep('pos, 1+',uPA$Nodes),grep('pos,2+',uPA$Nodes),grep('pos, 2+',uPA$Nodes),grep('pos,3+',uPA$Nodes),grep('pos, 3+',uPA$Nodes))
uPA$Nodes[c(grep('pos,1+',uPA$Nodes),grep('pos, 1+',uPA$Nodes),grep('pos,2+',uPA$Nodes),grep('pos, 2+',uPA$Nodes),grep('pos,3+',uPA$Nodes),grep('pos, 3+',uPA$Nodes))]
uPA$Nodes[grep('pos,',uPA$Nodes)]
grep('neg',uPA$Nodes)
uPA$Nodes[c(grep('pos,1+/',uPA$Nodes),grep('pos, 1+/',uPA$Nodes),grep('pos,2+/',uPA$Nodes),grep('pos, 2+/',uPA$Nodes),grep('pos,3+/',uPA$Nodes),grep('pos, 3+/',uPA$Nodes))]
grep('pos, 3+/',uPA$Nodes)
grep('pos, 3+/',uPA$Nodes)
grep('pos, 3+/',uPA$Nodes)
uPA$Nodes
grep('pos, 3+/',uPA$Nodes,fixed=T)
uPA$Nodes[grep('pos, 3+/',uPA$Nodes,fixed=T)]
uPA$Nodes[c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T))]
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal[grep('neg',uPA$Nodes)]
uPA$Nodes[grep('neg',uPA$Nodes)]
uPA$Nodal_Status[grep('neg',uPA$Nodes)]
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodes
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodal_Status
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes)
uPA$Nodal_Status
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodal_Status[-idx]
uPA$Nodal_Status[-idx] <- 2
library(vioplot)
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2])
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],xaxt='')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),ylab='Gene Expression',
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='ltblue'
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='blue',
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='magenta',
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col="magenta",
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='blue',
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='red',
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),
title('uPA Expression by Nodal Status'))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='red')
title('uPA')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='red')
title('uPA Expression by Nodal Status')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Node Negative','1-3 Positive','>3 Positive'),col='grey',ylab='Exp')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$uPAR[uPA$Nodal_Status==0],uPA$uPAR[uPA$Nodal_Status==1],uPA$uPAR[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPAR Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI_1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$PAI_2[uPA$Nodal_Status==0],uPA$PAI_2[uPA$Nodal_Status==1],uPA$PAI_2[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI_2 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodal_Status[c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T))] <- 1
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodal_Status[-idx] <- 2
library(vioplot)
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$uPAR[uPA$Nodal_Status==0],uPA$uPAR[uPA$Nodal_Status==1],uPA$uPAR[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPAR Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$PAI_2[uPA$Nodal_Status==0],uPA$PAI_2[uPA$Nodal_Status==1],uPA$PAI_2[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-2 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(uPA$uPA~uPA$Nodal_Status)
abline(lm(uPA$uPA~uPA$Nodal_Status))
summary(lm(uPA$uPA~uPA$Nodal_Status))
summary(lm(uPA$uPA~uPA$Nodal_Status))[2,4]
summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4]
round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)
paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,1,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
text('topright',paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
text('upperright',paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
vioplot(uPA$uPAR[uPA$Nodal_Status==0],uPA$uPAR[uPA$Nodal_Status==1],uPA$uPAR[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPAR Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPAR~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$uPAR~uPA$Nodal_Status))$coef[2,4],3)))
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_1~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3)))
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_1~uPA$Nodal_Status))
text(3,3,paste0('p = ',signif(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3)))
signif(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3))
signif(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3)
summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4]
vioplot(uPA$PAI_2[uPA$Nodal_Status==0],uPA$PAI_2[uPA$Nodal_Status==1],uPA$PAI_2[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-2 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_2~uPA$Nodal_Status))
text(3,6,paste0('p = ',round(summary(lm(uPA$PAI_2~uPA$Nodal_Status))$coef[2,4],3)))
setwd("~/Desktop/Projects")
jpeg('uPA.jpeg')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
dev.off()
setwd("~/Desktop/Projects/uPA")
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodal_Status[c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T))] <- 1
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodal_Status[-idx] <- 2
library(vioplot)
setwd("~/Desktop/Projects/uPA")
jpeg('uPA.jpeg')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
dev.off()
jpeg('uPAR.jpeg')
vioplot(uPA$uPAR[uPA$Nodal_Status==0],uPA$uPAR[uPA$Nodal_Status==1],uPA$uPAR[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPAR Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPAR~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$uPAR~uPA$Nodal_Status))$coef[2,4],3)))
dev.off()
jpeg('PAI_1.jpeg')
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_1~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3)))
dev.off()
jpeg('PAI_2.jpeg')
vioplot(uPA$PAI_2[uPA$Nodal_Status==0],uPA$PAI_2[uPA$Nodal_Status==1],uPA$PAI_2[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-2 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_2~uPA$Nodal_Status))
text(3,6,paste0('p = ',round(summary(lm(uPA$PAI_2~uPA$Nodal_Status))$coef[2,4],3)))
dev.off()
table(uPA$Nodal_Status)
uPA <- read_csv("~/Downloads/uPA.csv")
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodes[idx]
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative\nn=125','1-3 Positive\nn=69','>3 Positive\nn=53'),col='grey')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodal_Status[c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T))] <- 1
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodal_Status[-idx] <- 2
table(uPA$Nodal_Status)
uPA$Nodes[idx]
library(vioplot)
setwd("~/Desktop/Projects/uPA")
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3)
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
uPA <- read_csv("~/Downloads/uPA.csv")
uPA$Nodal_Status[grep('neg',uPA$Nodes)] <- 0
uPA$Nodal_Status[c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T))] <- 1
idx <- c(grep('pos,1+/',uPA$Nodes,fixed=T),grep('pos, 1+/',uPA$Nodes,fixed=T),
grep('pos,2+/',uPA$Nodes,fixed=T),grep('pos, 2+/',uPA$Nodes,fixed=T),
grep('pos,3+/',uPA$Nodes,fixed=T),grep('pos, 3+/',uPA$Nodes,fixed=T),grep('neg',uPA$Nodes))
uPA$Nodal_Status[-idx] <- 2
table(uPA$Nodal_Status)
# 0 - 125
# 1 - 69
# 2 - 53
uPA$Nodes[idx]
library(vioplot)
setwd("~/Desktop/Projects/uPA")
jpeg('uPA.jpeg')
vioplot(uPA$uPA[uPA$Nodal_Status==0],uPA$uPA[uPA$Nodal_Status==1],uPA$uPA[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPA Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPA~uPA$Nodal_Status))
text(3,2,paste0('p = ',round(summary(lm(uPA$uPA~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
dev.off()
jpeg('uPAR.jpeg')
vioplot(uPA$uPAR[uPA$Nodal_Status==0],uPA$uPAR[uPA$Nodal_Status==1],uPA$uPAR[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('uPAR Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$uPAR~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$uPAR~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
dev.off()
jpeg('PAI_1.jpeg')
vioplot(uPA$PAI_1[uPA$Nodal_Status==0],uPA$PAI_1[uPA$Nodal_Status==1],uPA$PAI_1[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-1 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_1~uPA$Nodal_Status))
text(3,3,paste0('p = ',round(summary(lm(uPA$PAI_1~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
dev.off()
jpeg('PAI_2.jpeg')
vioplot(uPA$PAI_2[uPA$Nodal_Status==0],uPA$PAI_2[uPA$Nodal_Status==1],uPA$PAI_2[uPA$Nodal_Status==2],
names=c('Negative','1-3 Positive','>3 Positive'),col='grey')
title('PAI-2 Expression by Nodal Status',ylab = 'Gene Expression',xlab = 'Nodal Status')
abline(lm(uPA$PAI_2~uPA$Nodal_Status))
text(3,6,paste0('p = ',round(summary(lm(uPA$PAI_2~uPA$Nodal_Status))$coef[2,4],3)))
mtext(c('n = 125','n = 69','n = 53'),1,at=1:3,line=2)
dev.off()
